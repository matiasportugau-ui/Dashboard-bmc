{
  "name": "dashboard-bmc",
  "version": "1.0.0",
  "description": "Financial Dashboard BMC - Comprehensive business metrics visualization",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm run test",
    "test:frontend": "cd frontend && npm run test",
    "test:e2e": "cd tests && npm run test:e2e",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:build": "docker-compose build",
    "migrate": "cd backend && npx prisma migrate deploy",
    "seed": "cd backend && npx prisma db seed",
    "setup": "npm run install:all && npm run migrate && npm run seed",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install",
    "clean": "rm -rf node_modules frontend/node_modules backend/node_modules frontend/dist backend/dist"
  },
  "keywords": [
    "dashboard",
    "financial",
    "analytics",
    "react",
    "typescript",
    "postgresql",
    "business-intelligence"
  ],
  "author": "Dashboard BMC Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/company/dashboard-bmc.git"
  },
  "engines": {
    "node": ">=18.17.0",
    "npm": ">=9.6.0"
  },
  "workspaces": [
    "frontend",
    "backend"
  ],
  "devDependencies": {
    "concurrently": "^8.2.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.3"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}