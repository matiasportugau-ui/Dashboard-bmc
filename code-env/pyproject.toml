[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "code-env"
version = "1.0.0"
description = "Entorno de desarrollo automatizado compatible con AI Assistant"
readme = "docs/README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Code Environment Team"}
]
keywords = ["development", "automation", "ai", "cursor", "templates"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]

dependencies = [
    "flask>=2.3.3",
    "fastapi>=0.103.1",
    "uvicorn>=0.23.2",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.3.0",
    "click>=8.1.7",
    "rich>=13.5.2",
    "pyyaml>=6.0.1"
]

[project.optional-dependencies]
dev = [
    "black>=23.7.0",
    "flake8>=6.0.0",
    "pytest>=7.4.0",
    "mypy>=1.5.1",
    "pre-commit>=3.3.3"
]

ai = [
    "openai>=0.28.0",
    "anthropic>=0.3.11",
    "langchain>=0.0.270",
    "transformers>=4.33.2"
]

data = [
    "pandas>=2.0.3",
    "numpy>=1.25.2",
    "sqlalchemy>=2.0.20"
]

[project.urls]
Homepage = "https://github.com/code-env/code-env"
Documentation = "https://github.com/code-env/code-env/docs"
Repository = "https://github.com/code-env/code-env.git"
Issues = "https://github.com/code-env/code-env/issues"

[project.scripts]
code-env = "code_env.cli:main"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    "*.egg-info",
    ".venv",
    "venv"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=code_env",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["code_env"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/node_modules/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]