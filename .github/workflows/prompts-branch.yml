name: Mejora Continua de Prompts (Branch)

# Disparadores del workflow:
# Se ejecuta en cualquier 'push' a cualquier rama ('**') si los cambios
# afectan a las carpetas de prompts, scripts o a este mismo archivo.
on:
  push:
    branches:
      - '**'
    paths:
      - 'MasterPrompts/**'
      - 'scripts/**'
      - '.github/workflows/prompts-branch.yml'

concurrency:
  group: prompts-branch-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  mejorar-prompts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      # Paso clave: Ejecuta el script 'watcher' en modo API.
      # Utiliza un secreto de GitHub (OPENAI_API_KEY) para la autenticación.
      # El script evaluará y evolucionará los prompts modificados.
      - name: Analizar y mejorar prompts (carpeta MasterPrompts)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROMPT_WATCHER_MODEL: 'gpt-4o' # Modelo a usar para la evaluación
        run: |
          python3 scripts/prompt_library_watcher_v2_1.py \
            --paths ./MasterPrompts \
            --mode API \
            --orchestrator scripts/PE-QA_Orchestrator_v1_3.prompt.md \
            --root-master ./MasterPrompts \
            --organize move

      # Paso final: Si el script anterior generó cambios (prompts evolucionados, logs),
      # esta acción los commitea y los sube automáticamente a la rama actual.
      - name: Commit de los prompts mejorados
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore(prompts): Mejora automática de prompts por CI/CD'
          branch: ${{ github.ref_name }}
