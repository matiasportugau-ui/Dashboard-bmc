version: '3.8'

services:
  # Aplicación principal
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    ports:
      - "5000:5000"
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - uploads:/app/uploads
      - logs:/app/logs
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      - mongodb
      - redis
    networks:
      - dashboard-network
    restart: unless-stopped

  # Base de datos MongoDB
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=dashboard_bmc
    networks:
      - dashboard-network
    restart: unless-stopped

  # Redis para cache y sesiones
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - dashboard-network
    restart: unless-stopped

  # Nginx como reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - uploads:/app/uploads
    depends_on:
      - app
    networks:
      - dashboard-network
    restart: unless-stopped

  # MongoDB Express para gestión de BD (desarrollo)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:admin123@mongodb:27017/
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongodb
    networks:
      - dashboard-network
    profiles:
      - tools

  # Redis Commander para gestión de Redis (desarrollo)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8082:8082"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - dashboard-network
    profiles:
      - tools

volumes:
  mongodb_data:
  mongodb_config:
  redis_data:
  uploads:
  logs:

networks:
  dashboard-network:
    driver: bridge